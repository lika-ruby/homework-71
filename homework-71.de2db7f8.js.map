{"mappings":"ACEA,MAAM,EAAQ,AAAA,GACH,IAAI,QAAQ,AAAC,IAChB,WAAW,KACP,EAAQ,EACZ,EAAG,EACP,GAGE,EAAS,AAAA,GAAQ,QAAQ,GAAG,CAAC,CAAC,eAAe,EAAE,EAAK,EAAE,CAAC,EAG7D,EAAM,KAAM,IAAI,CAAC,GACjB,EAAM,KAAM,IAAI,CAAC,GACjB,EAAM,MAAM,IAAI,CAAC,GAIjB,MAAM,EAAQ,CACV,CAAE,KAAM,QAAS,OAAQ,CAAA,CAAK,EAC9B,CAAE,KAAM,OAAQ,OAAQ,CAAA,CAAM,EAC9B,CAAE,KAAM,OAAQ,OAAQ,CAAA,CAAK,EAC7B,CAAE,KAAM,MAAO,OAAQ,CAAA,CAAM,EAChC,CAEK,EAAkB,CAAC,EAAU,IACxB,IAAI,QAAQ,AAAC,IAIhB,EAHqB,EAAS,GAAG,CAAC,AAAA,GAC9B,EAAK,IAAI,GAAK,EAAW,CAAE,GAAG,CAAI,CAAE,OAAQ,CAAC,EAAK,MAAM,AAAC,EAAI,GAGrE,GAGE,EAAU,AAAA,GAAgB,QAAQ,KAAK,CAAC,GAE9C,EAAgB,EAAO,SAAS,IAAI,CAAC,GACrC,EAAgB,EAAO,OAAO,IAAI,CAAC,GAKnC,MAAM,EAA4B,CAAC,EAAK,IAC7B,KAAK,KAAK,CAAC,KAAK,MAAM,GAAM,CAAA,EAAM,EAAM,CAAA,EAAK,GAGlD,EAAkB,AAAC,GACd,IAAI,QAAQ,CAAC,EAAS,KACzB,IAAM,EAAQ,EAA0B,IAAK,KAE7C,WAAW,KACY,KAAK,MAAM,GAAK,GAG/B,EAAQ,CAAE,GAAI,EAAY,EAAE,CAAE,KAAM,CAAM,GAE1C,EAAO,EAAY,EAAE,CAE7B,EAAG,EACP,GAIE,EAAa,CAAC,CAAA,GAAE,CAAE,CAAA,KAAE,CAAI,CAAE,IAC5B,QAAQ,GAAG,CAAC,CAAC,YAAY,EAAE,EAAG,cAAc,EAAE,EAAK,EAAE,CAAC,CAC1D,EAEM,EAAW,AAAA,IACb,QAAQ,IAAI,CAAC,CAAC,6BAA6B,EAAE,EAAG,yBAAyB,CAAC,CAC9E,EAYA,EAAgB,CAAE,GAAI,GAAI,OAAQ,GAAI,GACjC,IAAI,CAAC,GACL,KAAK,CAAC,GAEX,EAAgB,CAAE,GAAI,GAAI,OAAQ,GAAI,GACjC,IAAI,CAAC,GACL,KAAK,CAAC,GAEX,EAAgB,CAAE,GAAI,GAAI,OAAQ,EAAG,GAChC,IAAI,CAAC,GACL,KAAK,CAAC,GAEX,EAAgB,CAAE,GAAI,GAAI,OAAQ,GAAI,GACjC,IAAI,CAAC,GACL,KAAK,CAAC","sources":["<anon>","src/index.js"],"sourcesContent":["var $35da740d59af89ba$exports = {};\n//////////////////////////////// Task 1 ////////////////////////////////\nconst $35da740d59af89ba$var$delay = (ms)=>{\n    return new Promise((resolve)=>{\n        setTimeout(()=>{\n            resolve(ms);\n        }, ms);\n    });\n};\nconst $35da740d59af89ba$var$logger = (time)=>console.log(`Resolved after ${time}ms`);\n// Виклич функції для перевірки\n$35da740d59af89ba$var$delay(2000).then($35da740d59af89ba$var$logger); // Resolved after 2000ms\n$35da740d59af89ba$var$delay(1000).then($35da740d59af89ba$var$logger); // Resolved after 1000ms\n$35da740d59af89ba$var$delay(1500).then($35da740d59af89ba$var$logger); // Resolved after 1500ms\n//////////////////////////////// Task 2 ////////////////////////////////\nconst $35da740d59af89ba$var$users = [\n    {\n        name: 'Mango',\n        active: true\n    },\n    {\n        name: 'Poly',\n        active: false\n    },\n    {\n        name: 'Ajax',\n        active: true\n    },\n    {\n        name: 'Lux',\n        active: false\n    }\n];\nconst $35da740d59af89ba$var$toggleUserState = (allUsers, userName)=>{\n    return new Promise((resolve)=>{\n        const updatedUsers = allUsers.map((user)=>user.name === userName ? {\n                ...user,\n                active: !user.active\n            } : user);\n        resolve(updatedUsers);\n    });\n};\nconst $35da740d59af89ba$var$logger2 = (updatedUsers)=>console.table(updatedUsers);\n$35da740d59af89ba$var$toggleUserState($35da740d59af89ba$var$users, 'Mango').then($35da740d59af89ba$var$logger2);\n$35da740d59af89ba$var$toggleUserState($35da740d59af89ba$var$users, 'Lux').then($35da740d59af89ba$var$logger2);\n//////////////////////////////// Task 3 ////////////////////////////////\nconst $35da740d59af89ba$var$randomIntegerFromInterval = (min, max)=>{\n    return Math.floor(Math.random() * (max - min + 1) + min);\n};\nconst $35da740d59af89ba$var$makeTransaction = (transaction)=>{\n    return new Promise((resolve, reject)=>{\n        const delay = $35da740d59af89ba$var$randomIntegerFromInterval(200, 500);\n        setTimeout(()=>{\n            const canProcess = Math.random() > 0.3;\n            if (canProcess) resolve({\n                id: transaction.id,\n                time: delay\n            });\n            else reject(transaction.id);\n        }, delay);\n    });\n};\nconst $35da740d59af89ba$var$logSuccess = ({ id: id, time: time })=>{\n    console.log(`Transaction ${id} processed in ${time}ms`);\n};\nconst $35da740d59af89ba$var$logError = (id)=>{\n    console.warn(`Error processing transaction ${id}. Please try again later.`);\n};\n/*\r\n * Працює так\r\n */ // makeTransaction({ id: 70, amount: 150 }, logSuccess, logError);\n// makeTransaction({ id: 71, amount: 230 }, logSuccess, logError);\n// makeTransaction({ id: 72, amount: 75 }, logSuccess, logError);\n// makeTransaction({ id: 73, amount: 100 }, logSuccess, logError);\n/*\r\n * Повинно працювати так\r\n */ $35da740d59af89ba$var$makeTransaction({\n    id: 70,\n    amount: 150\n}).then($35da740d59af89ba$var$logSuccess).catch($35da740d59af89ba$var$logError);\n$35da740d59af89ba$var$makeTransaction({\n    id: 71,\n    amount: 230\n}).then($35da740d59af89ba$var$logSuccess).catch($35da740d59af89ba$var$logError);\n$35da740d59af89ba$var$makeTransaction({\n    id: 72,\n    amount: 75\n}).then($35da740d59af89ba$var$logSuccess).catch($35da740d59af89ba$var$logError);\n$35da740d59af89ba$var$makeTransaction({\n    id: 73,\n    amount: 100\n}).then($35da740d59af89ba$var$logSuccess).catch($35da740d59af89ba$var$logError);\n\n\n//# sourceMappingURL=homework-71.de2db7f8.js.map\n","//////////////////////////////// Task 1 ////////////////////////////////\r\n\r\nconst delay = ms => {\r\n    return new Promise((resolve) => {\r\n        setTimeout(() => {\r\n            resolve(ms)\r\n        }, ms)\r\n    })\r\n};\r\n\r\nconst logger = time => console.log(`Resolved after ${time}ms`);\r\n\r\n// Виклич функції для перевірки\r\ndelay(2000).then(logger); // Resolved after 2000ms\r\ndelay(1000).then(logger); // Resolved after 1000ms\r\ndelay(1500).then(logger); // Resolved after 1500ms\r\n\r\n//////////////////////////////// Task 2 ////////////////////////////////\r\n\r\nconst users = [\r\n    { name: 'Mango', active: true },\r\n    { name: 'Poly', active: false },\r\n    { name: 'Ajax', active: true },\r\n    { name: 'Lux', active: false },\r\n];\r\n\r\nconst toggleUserState = (allUsers, userName) => {\r\n    return new Promise((resolve) => {\r\n        const updatedUsers = allUsers.map(user =>\r\n            user.name === userName ? { ...user, active: !user.active } : user,\r\n        );\r\n        resolve(updatedUsers)\r\n    })\r\n};\r\n\r\nconst logger2 = updatedUsers => console.table(updatedUsers);\r\n\r\ntoggleUserState(users, 'Mango').then(logger2);\r\ntoggleUserState(users, 'Lux').then(logger2);\r\n\r\n//////////////////////////////// Task 3 ////////////////////////////////\r\n\r\n\r\nconst randomIntegerFromInterval = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\nconst makeTransaction = (transaction) => {\r\n    return new Promise((resolve, reject) => {\r\n        const delay = randomIntegerFromInterval(200, 500);\r\n\r\n        setTimeout(() => {\r\n            const canProcess = Math.random() > 0.3;\r\n\r\n            if (canProcess) {\r\n                resolve({ id: transaction.id, time: delay })\r\n            } else {\r\n                reject(transaction.id);\r\n            }\r\n        }, delay);\r\n    })\r\n\r\n};\r\n\r\nconst logSuccess = ({ id, time }) => {\r\n    console.log(`Transaction ${id} processed in ${time}ms`);\r\n};\r\n\r\nconst logError = id => {\r\n    console.warn(`Error processing transaction ${id}. Please try again later.`);\r\n};\r\n\r\n/*\r\n * Працює так\r\n */\r\n// makeTransaction({ id: 70, amount: 150 }, logSuccess, logError);\r\n// makeTransaction({ id: 71, amount: 230 }, logSuccess, logError);\r\n// makeTransaction({ id: 72, amount: 75 }, logSuccess, logError);\r\n// makeTransaction({ id: 73, amount: 100 }, logSuccess, logError);\r\n/*\r\n * Повинно працювати так\r\n */\r\nmakeTransaction({ id: 70, amount: 150 })\r\n    .then(logSuccess)\r\n    .catch(logError);\r\n\r\nmakeTransaction({ id: 71, amount: 230 })\r\n    .then(logSuccess)\r\n    .catch(logError);\r\n\r\nmakeTransaction({ id: 72, amount: 75 })\r\n    .then(logSuccess)\r\n    .catch(logError);\r\n\r\nmakeTransaction({ id: 73, amount: 100 })\r\n    .then(logSuccess)\r\n    .catch(logError);"],"names":["$35da740d59af89ba$var$delay","ms","Promise","resolve","setTimeout","$35da740d59af89ba$var$logger","time","console","log","then","$35da740d59af89ba$var$users","name","active","$35da740d59af89ba$var$toggleUserState","allUsers","userName","map","user","$35da740d59af89ba$var$logger2","updatedUsers","table","$35da740d59af89ba$var$randomIntegerFromInterval","min","max","Math","floor","random","$35da740d59af89ba$var$makeTransaction","transaction","reject","delay","id","$35da740d59af89ba$var$logSuccess","$35da740d59af89ba$var$logError","warn","amount","catch"],"version":3,"file":"homework-71.de2db7f8.js.map"}